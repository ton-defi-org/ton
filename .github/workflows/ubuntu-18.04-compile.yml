name: C/C++ CI Ubuntu 18.04 Building vm-exec wasm

on: [push,workflow_dispatch]
env:
  ZLIB_LIBRARY: ${{ github.workspace }}/wasm-libs/zlib-1.2.12/
  ZLIB_INCLUDE_DIR: ${{ github.workspace }}/wasm-libs/zlib-1.2.12/
  OPENSSL_ROOT_DIR: ${{ github.workspace }}/wasm-libs/openssl/openssl-1.1.1d/
  OPENSSL_INCLUDE_DIR: ${{ github.workspace }}/wasm-libs/openssl/openssl-1.1.1d/include/
  OPENSSL_CRYPTO_LIBRARY: ${{ github.workspace }}/wasm-libs/openssl/openssl-1.1.1d/libcrypto.a
  OPENSSL_SSL_LIBRARY: ${{ github.workspace }}/wasm-libs/openssl/openssl-1.1.1d/libssl.a
  OPENSSL_LIBRARIES: ${{ github.workspace }}/wasm-libs/openssl/openssl-1.1.1d/libssl.a ${{ github.workspace }}/wasm-libs/openssl/openssl-1.1.1d/libcrypto.a

jobs:
  build:

    runs-on: ubuntu-18.04

    steps:
    - uses: mymindstorm/setup-emsdk@v11
    - name: Verify emsdk
      run: emcc -v
    - name: ls zlib
      run: |
        echo $GITHUB_WORKSPACE
        cd $GITHUB_WORKSPACE
        ls
        echo $ZLIB_LIBRARY
        cd /home/runner/work/ton/ton/wasm-libs/zlib-1.2.12
        ls
    - name: Check out repository
      uses: actions/checkout@v2
      with:      
        submodules: 'recursive'
    - name: mkdir
      run: |
        mkdir build
    - name: cmake
      run: | 
        cd build
        cmake .. -DCMAKE_TOOLCHAIN_FILE=$EMSDK/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake
    - name: cmake vm-exec
      run: |
        cd build
        cmake --build . --target vm-exec
    - name: find & copy wasm files
      run: |
        mkdir wasm-artifacts
        cp --parents build/crypto/vm-exec.wasm build/crypto/vm-exec.js
    - name: Upload artifacts
      uses: actions/upload-artifact@master
      with:
        name: ton-wasm-files
        path: wasm-artifacts
